import static com.kms.katalon.core.testobject.ObjectRepository.findTestObject
import org.testng.Assert

import com.kms.katalon.core.testdata.TestData
import com.kms.katalon.core.testobject.RequestObject
import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WS

import common.MySqlServer as MySqlServer
import common.utils
import groovy.json.JsonSlurper
import internal.GlobalVariable
import static common.Constants.DATA_API_DATETIME_FORMAT as DATA_API_DATETIME_FORMAT
import static common.Constants.FULL_DATETIME_FORMAT as FULL_DATETIME_FORMAT

final TestData TEST_DATA = TestListener.testData
final int ROW_INDEX = TestListener.rowIndex

'Prepare data from DB'
String[] paramsName = ['createdtimestamp', 'assetbillofmaterialid', 'pagesize', 'page']
def randomData = utils.getRandomOneRecordInDB(TEST_DATA, ROW_INDEX, '[EDM].[AssetBillOfMaterial]', paramsName)

'1. Get Data from Excel'
'1.1 Get Response Code'
final int EXPECTED_RESPONSE_CODE = Integer.parseInt(TEST_DATA.getValue("responseCode", ROW_INDEX))

'1.2 Get and Add Query Paramater for URL'
Map<String, String> mapParamWithData = utils.getMapParamURLAndValue(TEST_DATA, ROW_INDEX, paramsName, randomData)
List<String> params = utils.addParametersURL(mapParamWithData)

'2. Call API'
'2.1 Build rest url'
RequestObject requestObject = findTestObject('Object Repository/DELTA/AssetBillOfMaterial', [('params') : params.join('&')]);
String decodedUrl = URLDecoder.decode(requestObject.getRestUrl().replace("=", ""))
requestObject.setRestUrl(utils.replaceAllSpaces(decodedUrl))

'2.2 Send request'
String token = TEST_DATA.getValue('authorization', ROW_INDEX)
utils.resetAuthorizationToken(requestObject, token)
def response = WS.sendRequest(requestObject)

'3. Verify response code'
WS.verifyResponseStatusCode(response, EXPECTED_RESPONSE_CODE)

'4. Verify response data'
String EXPECTED_RESPONSE_BODY = TestListener.testData.getValue('responseBody', TestListener.rowIndex)

if (EXPECTED_RESPONSE_BODY.toUpperCase() == 'SQL') {
	'4.1 Get data from DB'
	String queryString = utils.rebuildSQLQueryGetTestData(TEST_DATA.getValue('SQL', ROW_INDEX), mapParamWithData)
	List<Object> dataDB = MySqlServer.executeQuery(queryString)

	'4.2 Get data from API'
	JsonSlurper slurper = new JsonSlurper()
	List<Object> dataAPI = slurper.parseText(response.getResponseText()).records
	
	'4.3 Compare data DB and API'
	String[] paramsDatetimeType = ['CreatedTimestamp', 'UpdatedTimestamp']
	utils.convertDateTime(dataAPI, DATA_API_DATETIME_FORMAT, FULL_DATETIME_FORMAT, paramsDatetimeType)
	
	String[] paramDateOfDateTime = ['ChangedOn', 'ValidFromDate', 'DateRecordCreatedon']
	utils.convertDateTimeFormat(dataAPI, DATA_API_DATETIME_FORMAT, 'yyyy-MM-dd', paramDateOfDateTime)
	
	'4.4 Verify data'
	utils.verifyData(dataAPI, dataDB, 'DELTA-AssetBillOfMaterial data is not match')

}else if (EXPECTED_RESPONSE_BODY.toUpperCase() == 'BODY') {
	def expectedBody = TestListener.testData.getValue('expectBody', TestListener.rowIndex)
	Assert.assertEquals(utils.replaceAllSpaces(response.getResponseText()), utils.replaceAllSpaces(expectedBody))
}